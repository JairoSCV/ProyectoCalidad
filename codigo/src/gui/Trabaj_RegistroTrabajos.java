
package gui;

import Conex.Conexion;
import java.awt.Color;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.border.LineBorder;
import javax.swing.table.DefaultTableModel;


public class Trabaj_RegistroTrabajos extends javax.swing.JFrame {

    private DefaultTableModel trab;
    public Trabaj_RegistroTrabajos() {
        initComponents();
        tblTrab.setBorder(new LineBorder(new Color(0, 0, 0)));
	tblTrab.setFillsViewportHeight(true);
        listar_Registro_Trabajos();
    }
    
    public static String dato="";
    void listar_Registro_Trabajos(){
        Conexion cc = new Conexion();
        Connection cn = cc.conexion();
        
        trab=new DefaultTableModel();
        trab.addColumn("Nº Boleta");
        trab.addColumn("Material");
        trab.addColumn("Peso Total");
        trab.addColumn("Entrega Material");
        trab.addColumn("Estado de Fabricación");
        tblTrab.setModel(trab);
        
        String sql = "SELECT * FROM articulo_pedido";
        
        String []datos = new String[5];
        try{
            Statement st = cn.createStatement();
            ResultSet rs = st.executeQuery(sql);
            
            while(rs.next()){
                datos[0] = rs.getString(1);
                datos[1] = rs.getString(4);
                datos[2] = ""+(rs.getDouble(5)*rs.getInt(7));
                datos[3] = rs.getString(11);
                datos[4] = rs.getString(8);
                trab.addRow(datos);
            }
            tblTrab.setModel(trab);
        }catch(SQLException ex){
            mensaje("No se pudo conectar con la Base de Datos");
        }
    }
    
    //VARIABLES STATIC
    
    public static String N_boleta = "";
    public static String Material = "";
    public static double p_total = 0.0;
    public static String Estado_material = "";
    public static String Estado_fabricacion = "";
    
    
    void mensaje(String s) {
	JOptionPane.showMessageDialog(this, s);
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        btnSolicitar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblTrab = new javax.swing.JTable();
        btnEditar = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        lblFondo1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel1.setText("<html>En esta sección usted tendrá acceso a u registro de trabajos donde podrá solicitar el material necesario para la fabricación. A su vez, también podrá editar el registro pero unicamente el \"ESTADO DE FABRICACIÓN\", para saber si el trabajo está: \"SIN FABRICAR\",\"FABRICANDO\" o \"TERMINADO\".</html>");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(26, 45, 575, -1));

        jLabel2.setFont(new java.awt.Font("Sylfaen", 1, 20)); // NOI18N
        jLabel2.setText("REGISTRO DE TRABAJOS");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(26, 12, -1, -1));

        btnSolicitar.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        btnSolicitar.setText("Solicitar Material");
        btnSolicitar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSolicitarActionPerformed(evt);
            }
        });
        getContentPane().add(btnSolicitar, new org.netbeans.lib.awtextra.AbsoluteConstraints(247, 464, -1, -1));

        tblTrab.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblTrab.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tblTrabKeyReleased(evt);
            }
        });
        jScrollPane1.setViewportView(tblTrab);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(36, 101, 613, 348));

        btnEditar.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnEditar.setText("Editar Estado");
        btnEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarActionPerformed(evt);
            }
        });
        getContentPane().add(btnEditar, new org.netbeans.lib.awtextra.AbsoluteConstraints(482, 460, 130, 31));

        jButton3.setText("<  Regresar");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(36, 466, -1, -1));

        lblFondo1.setBackground(new java.awt.Color(0, 0, 0));
        lblFondo1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes_interfaces/color_ventanas.jpg"))); // NOI18N
        lblFondo1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        getContentPane().add(lblFondo1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 690, 520));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        dispose();
        Ventana_Trabajador vt=new Ventana_Trabajador();
        vt.setLocationRelativeTo(null);
        vt.setVisible(true);
    }//GEN-LAST:event_jButton3ActionPerformed

    private void btnEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarActionPerformed
        try{
        int f=tblTrab.getSelectedRow();
        N_boleta = tblTrab.getValueAt(f, 0).toString();
        Material = tblTrab.getValueAt(f, 1).toString();
        p_total = Double.parseDouble(tblTrab.getValueAt(f, 2).toString());
        Estado_material = tblTrab.getValueAt(f, 3).toString();
        Estado_fabricacion = tblTrab.getValueAt(f, 4).toString();
        if(f>-1){
            switch (Estado_material) {
                case "SIN ENTREGAR":
                    mensaje("No se puede concretar esta opción porque no se ha solicitado material");
                    break;
                case "SOLICITADO":
                    mensaje("No se puede concretar esta opción porque no se dispone de material");
                    break;
                default:
                    if(Estado_fabricacion.equals("TERMINADO")){
                        mensaje("No se puede editar un trabajo ya terminado");
                    }
                    else{
                        dato=String.valueOf(trab.getValueAt(tblTrab.getSelectedRow(),0));
                        dispose();
                        Trabaj_EditarReg t=new Trabaj_EditarReg();
                        t.setLocationRelativeTo(null);
                        t.setVisible(true);
                    }       break;
            }
        }
        }catch(Exception e){
            mensaje("SELECCIONE UN REGISTRO");
        }
    }//GEN-LAST:event_btnEditarActionPerformed

    private void btnSolicitarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSolicitarActionPerformed
        try{
        int pos = tblTrab.getSelectedRow();
        Estado_material = tblTrab.getValueAt(pos, 3).toString();
        if(pos > -1){
            switch (Estado_material) {
                case "SOLICITADO":
                    mensaje("No se puede solicitar, porque ya ha sido solicitado");
                    break;
                case "ENTREGADO":
                    mensaje("No se puede solicitar, porque ya ha sido entregado el material");
                    break;
                default:
                    String usuario_solicitante = Login_trabajador.ID_usuario;
                    
                    Conexion cc = new Conexion();
                    Connection cn = cc.conexion();
            try {
                PreparedStatement pst = cn.prepareStatement("UPDATE articulo_pedido SET ENTREGA_MATERIAL = 'SOLICITADO' WHERE N_BOLETA = '"+tblTrab.getValueAt(pos, 0).toString()+"' ");
                pst.executeUpdate();
                listar_Registro_Trabajos();
                
                //CREANDO UN REGISTRO LISTA_PEDIDO
                PreparedStatement pst_lista_pedido = cn.prepareStatement("INSERT INTO lista_pedidos(ID_PEDIDO,ID_TRABAJADOR,ESTADO_ENTREGA_MATERIAL,MATERIAL,PESO_TOTAL) VALUES(?,?,?,?,?)");
                pst_lista_pedido.setString(1,tblTrab.getValueAt(pos, 0).toString());
                pst_lista_pedido.setString(2,usuario_solicitante);
                pst_lista_pedido.setString(3,"SOLICITADO");
                pst_lista_pedido.setString(4,tblTrab.getValueAt(pos, 1).toString());
                double peso_total = Double.parseDouble(tblTrab.getValueAt(pos, 2).toString());
                pst_lista_pedido.setDouble(5, peso_total);
                
                //EJECUTAR EL INSERTAR NUEVA LISTA_PEDIDO
                pst_lista_pedido.executeUpdate();
                
                mensaje("MATERIAL SOLICITADO");
                
            } catch (SQLException ex) {
                Logger.getLogger(Trabaj_RegistroTrabajos.class.getName()).log(Level.SEVERE, null, ex);
            }
                    break;
            }
        }else{
            mensaje("SELECCIONE UN REGISTRO");
        }
    }catch(Exception e){
        mensaje("SELECCIONE UN REGISTRO");
    }
    }//GEN-LAST:event_btnSolicitarActionPerformed

    private void tblTrabKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tblTrabKeyReleased

    }//GEN-LAST:event_tblTrabKeyReleased
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Trabaj_RegistroTrabajos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Trabaj_RegistroTrabajos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Trabaj_RegistroTrabajos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Trabaj_RegistroTrabajos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Trabaj_RegistroTrabajos().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnEditar;
    private javax.swing.JButton btnSolicitar;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblFondo1;
    private javax.swing.JTable tblTrab;
    // End of variables declaration//GEN-END:variables
}
